installed.packages("rcurl")
install.packages("rcurl")
install.packages("RCurl")
#install.packages('bitops')
#install.packages('RCurl')
library('bitops')
library('RCurl')
diamondsurl = getBinaryURL("https://raw.github.com/solomonm/diamonds-data/master/BigDiamonds.Rda")
load(rawConnection(diamondsurl))
#install.packages('bitops')
#install.packages('RCurl')
library('bitops')
library('RCurl')
diamondsurl = getBinaryURL("https://raw.github.com/solomonm/diamonds-data/master/BigDiamonds.Rda")
load(rawConnection(diamondsurl))
diamondsBig <- read.csv("../datasets/diamondsbig.csv")
diamondsBig$logprice <- log(diamondsBig$price)
diamondsBigSample <- # Find code to create nrows() sample
m1 <- lm(logprice ~ I(carat^(1/3)), data = diamondsBigSample[diamondsBigSample$price < 10000 &
diamondsBigSample$cert == 'GIA',])
source('~/.active-rstudio-document', echo=TRUE)
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(dplyr)
library(tidyr)
# Load the Data
wine_quality <- read.csv("../Data/wineQualityReds.csv")
summary(wine_quality)
wine_quality$quality <- factor(ordered(wine_quality$quality))
str(wine_quality$quality)
summary(wine_quality$quality)
ggplot(data = wine_quality, aes(x = quality)) + geom_bar(stat = "count")
qual_mean <- mean(as.numeric(levels(wine_quality$quality)[wine_quality$quality]))
qual_sd <- sd(as.numeric(levels(wine_quality$quality)[wine_quality$quality]))
qual_mean
qual_sd
ggplot(data = wine_quality, aes(x = fixed.acidity)) + geom_histogram(binwidth = 0.2)
ggplot(data = wine_quality, aes(x = volatile.acidity)) + geom_histogram(binwidth = 0.03)
ggplot(data = wine_quality, aes(x = citric.acid)) + geom_histogram(binwidth = 0.02)
ggplot(data = wine_quality, aes(x = citric.acid)) + geom_histogram(binwidth = 0.01)
#wine_quality$citric.acid
cond <- wine_quality$citric.acid == 0.49
wine_quality[cond,]
ggplot(data = wine_quality, aes(x = pH)) + geom_histogram(binwidth = 0.02)
ggplot(data = wine_quality, aes(x = free.sulfur.dioxide)) + geom_histogram(binwidth = 1)
ggplot(data = wine_quality, aes(x = total.sulfur.dioxide)) + geom_histogram(binwidth = 3)
ggplot(data = wine_quality, aes(x = sulphates)) + geom_histogram(binwidth = 0.02)
ggplot(data = wine_quality, aes(x = alcohol)) + geom_histogram(binwidth = 0.1)
ggplot(data = wine_quality, aes(x = density)) + geom_histogram(binwidth = 0.0002)
ggplot(data = wine_quality, aes(x = residual.sugar)) + geom_histogram(binwidth = 0.1)
print("WTFR")
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(dplyr)
library(tidyr)
# Load the Data
wine_quality <- read.csv("../Data/wineQualityReds.csv")
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(dplyr)
library(tidyr)
# Load the Data
wine_quality <- read.csv("../Data/wineQualityReds.csv")
summary(wine_quality)
wine_quality$quality <- factor(ordered(wine_quality$quality))
str(wine_quality$quality)
summary(wine_quality$quality)
ggplot(data = wine_quality, aes(x = quality)) + geom_bar(stat = "count")
qual_mean <- mean(as.numeric(levels(wine_quality$quality)[wine_quality$quality]))
qual_sd <- sd(as.numeric(levels(wine_quality$quality)[wine_quality$quality]))
qual_mean
qual_sd
ggplot(data = wine_quality, aes(x = fixed.acidity)) + geom_histogram(binwidth = 0.2)
ggplot(data = wine_quality, aes(x = volatile.acidity)) + geom_histogram(binwidth = 0.03)
ggplot(data = wine_quality, aes(x = citric.acid)) + geom_histogram(binwidth = 0.02)
ggplot(data = wine_quality, aes(x = citric.acid)) + geom_histogram(binwidth = 0.01)
#wine_quality$citric.acid
cond <- wine_quality$citric.acid == 0.49
wine_quality[cond,]
ggplot(data = wine_quality, aes(x = pH)) + geom_histogram(binwidth = 0.02)
ggplot(data = wine_quality, aes(x = free.sulfur.dioxide)) + geom_histogram(binwidth = 1)
ggplot(data = wine_quality, aes(x = total.sulfur.dioxide)) + geom_histogram(binwidth = 3)
ggplot(data = wine_quality, aes(x = sulphates)) + geom_histogram(binwidth = 0.02)
ggplot(data = wine_quality, aes(x = alcohol)) + geom_histogram(binwidth = 0.1)
ggplot(data = wine_quality, aes(x = density)) + geom_histogram(binwidth = 0.0002)
ggplot(data = wine_quality, aes(x = residual.sugar)) + geom_histogram(binwidth = 0.1)
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
install.packages("ggplot2")
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(dplyr)
install.packages(dplyr)
install.packages("dplyr")
install.packages("tidyr")
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(dplyr)
library(tidyr)
# Load the Data
wine_quality <- read.csv("../Data/wineQualityReds.csv")
summary(wine_quality)
wine_quality$quality <- factor(ordered(wine_quality$quality))
str(wine_quality$quality)
summary(wine_quality$quality)
ggplot(data = wine_quality, aes(x = quality)) + geom_bar(stat = "count")
qual_mean <- mean(as.numeric(levels(wine_quality$quality)[wine_quality$quality]))
qual_sd <- sd(as.numeric(levels(wine_quality$quality)[wine_quality$quality]))
qual_mean
qual_sd
ggplot(data = wine_quality, aes(x = fixed.acidity)) + geom_histogram(binwidth = 0.2)
ggplot(data = wine_quality, aes(x = volatile.acidity)) + geom_histogram(binwidth = 0.03)
ggplot(data = wine_quality, aes(x = citric.acid)) + geom_histogram(binwidth = 0.02)
ggplot(data = wine_quality, aes(x = citric.acid)) + geom_histogram(binwidth = 0.01)
#wine_quality$citric.acid
cond <- wine_quality$citric.acid == 0.49
wine_quality[cond,]
ggplot(data = wine_quality, aes(x = pH)) + geom_histogram(binwidth = 0.02)
ggplot(data = wine_quality, aes(x = free.sulfur.dioxide)) + geom_histogram(binwidth = 1)
ggplot(data = wine_quality, aes(x = total.sulfur.dioxide)) + geom_histogram(binwidth = 3)
ggplot(data = wine_quality, aes(x = sulphates)) + geom_histogram(binwidth = 0.02)
ggplot(data = wine_quality, aes(x = alcohol)) + geom_histogram(binwidth = 0.1)
ggplot(data = wine_quality, aes(x = density)) + geom_histogram(binwidth = 0.0002)
ggplot(data = wine_quality, aes(x = residual.sugar)) + geom_histogram(binwidth = 0.1)
pf <- read.delim('../datasets/pseudo_facebook.tsv')
pf
qplot(x = age, y = friend_count, data = pf)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point() +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20) +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13, 90)
ggplot(aes(x = age, y = friend_count), data = subset(pf, friend_count > 0 || age > 0)) +
geom_jitter(alpha = 1/20) +
xlim(13, 90)
# geom_jitter() introduces noise (+ and -) that could create values that would be imaginary when passed to sqrt
?coord_trans
ggplot(aes(x = age, y = friend_count), data = subset(pf, friend_count > 0 || age > 0)) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(13, 90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = subset(pf, friend_count > 0 || age > 0)) +
geom_point(alpha = 1/20) +
xlim(13, 90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_point(alpha = 1/20, position = position_jitter(h = 0)) +
scale_x_continuous(limits = c(13,90), breaks = seq(13, 90, 2)) +
coord_trans(y = "sqrt")
library(dplyr)
pf.fc_by_age <- group_by(pf, age) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age)
head(pf.fc_by_age)
ggplot(aes(y = friend_count_mean, x = age), data = pf.fc_by_age) +
geom_line()
ggplot(aes(y = friend_count_median, x = age), data = pf.fc_by_age) +
geom_line()
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20,
position = position_jitter(h = 0),
color = 'orange') +
geom_line(stat = "summary", fun.y = mean) +
geom_line(stat = "summary", fun.y = quantile,
fun.args = list(probs = 0.1),
linetype = 2, color = 'blue') +
geom_line(stat = "summary", fun.y = quantile,
fun.args = list(probs = 0.5),
linetype = 2, color = 'blue') +
geom_line(stat = "summary", fun.y = quantile,
fun.args = list(probs = 0.9),
linetype = 2, color = 'blue') +
coord_cartesian(xlim = c(13,70), ylim = c(0, 1000) )
#coord_trans(y = "sqrt") +
#scale_x_continuous(limits = c(13,90), breaks = seq(13, 90, 2)) +
?cor.test
cor.test(pf$age, pf$friend_count)
with(pf, cor.test(age, friend_count))
with(subset(pf, age <= 70), cor.test(age, friend_count))
with(pf, qplot(likes_received, www_likes_received))
ggplot(aes(x = log10(www_likes_received), y = log10(likes_received)), data = pf) +
geom_point(alpha = 1/40, position = position_jitter(h = 0)) +
scale_x_log10() +
scale_y_log10() +
coord_trans(x = 'log10', y = 'log10')
ggplot(data = wine_quality, aes(x = alcohol)) + geom_histogram(binwidth = 0.1)
```{r echo=FALSE, Univariate_Plots15}
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(dplyr)
library(tidyr)
# Load the Data
wine_quality <- read.csv("../Data/wineQualityReds.csv")
summary(wine_quality)
wine_quality$quality <- factor(ordered(wine_quality$quality))
str(wine_quality$quality)
summary(wine_quality$quality)
ggplot(data = wine_quality, aes(x = quality)) + geom_bar(stat = "count")
qual_mean <- mean(as.numeric(levels(wine_quality$quality)[wine_quality$quality]))
qual_sd <- sd(as.numeric(levels(wine_quality$quality)[wine_quality$quality]))
qual_mean
qual_sd
ggplot(data = wine_quality, aes(x = fixed.acidity)) + geom_histogram(binwidth = 0.2)
ggplot(data = wine_quality, aes(x = volatile.acidity)) + geom_histogram(binwidth = 0.03)
ggplot(data = wine_quality, aes(x = citric.acid)) + geom_histogram(binwidth = 0.02)
ggplot(data = wine_quality, aes(x = citric.acid)) + geom_histogram(binwidth = 0.01)
#wine_quality$citric.acid
cond <- wine_quality$citric.acid == 0.49
wine_quality[cond,]
ggplot(data = wine_quality, aes(x = pH)) + geom_histogram(binwidth = 0.02)
ggplot(data = wine_quality, aes(x = free.sulfur.dioxide)) + geom_histogram(binwidth = 1)
ggplot(data = wine_quality, aes(x = total.sulfur.dioxide)) + geom_histogram(binwidth = 3)
ggplot(data = wine_quality, aes(x = sulphates)) + geom_histogram(binwidth = 0.02)
ggplot(data = wine_quality, aes(x = alcohol)) + geom_histogram(binwidth = 0.1)
ggplot(data = wine_quality, aes(x = density)) + geom_histogram(binwidth = 0.0002)
ggplot(data = wine_quality, aes(x = residual.sugar)) + geom_histogram(binwidth = 0.1)
levels(diamonds$color)
library(ggplot2)
library('tidyr')
library('dplyr')
library(xlsx)
library(lubridate)
data(diamonds)
dim(diamonds)
summary(diamonds)
str(diamonds)
?diamonds
levels(diamonds$color)
by(diamonds$price, diamonds$color, summary)
by(diamonds$price / diamonds$carat, diamonds$color, summary)
qplot(x = carat, data = diamonds,
binwidth = 0.01, geom = 'freqpoly')
ggplot(data = wine_quality, aes(x = residual.sugar)) + geom_histogram(binwidth = 0.1)
ggplot(data = wine_quality, aes(x = residual.sugar), xlim = c(0, 4)) + geom_histogram(binwidth = 0.1)
ggplot(data = wine_quality, aes(x = residual.sugar), xlim = c(0, 4)) + geom_histogram(binwidth = 0.1)
ggplot(data = wine_quality, aes(x = residual.sugar), xlim = c(0, 4)) + geom_histogram(binwidth = 0.1)
ggplot(data = wine_quality, aes(x = residual.sugar), xlim = c(0, 4)) + geom_histogram(binwidth = 0.1)
ggplot(data = wine_quality, aes(x = residual.sugar), xlim = c(0, 4)) + geom_histogram(binwidth = 0.1) + scale_x_discrete()
ggplot(data = wine_quality, aes(x = residual.sugar), xlim = c(0, 4)) + geom_histogram(binwidth = 0.1) + scale_x_continuous()
ggplot(aes(x = residual.sugar), data = wine_quality, xlim = c(0, 4)) + geom_histogram(binwidth = 0.1) + scale_x_continuous()
ggplot(aes(x = residual.sugar), data = wine_quality, xlim = c(0, 4)) + geom_histogram(binwidth = 0.1) + scale_x_continuous(limits = c(0, 4))
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(limits = c(0, 4))
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(limits = c(0, 6))
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(limits = c(0, 8))
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(limits = c(0, 6))
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(limits = c(6, 12))
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(limits = c(6, 16))
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(limits = c(0, 6))
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(limits = c(0, 6))
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(limits = c(3.5, 6))
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(limits = c(3, 6))
str(wine_quality)
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(dplyr)
library(tidyr)
# Load the Data
wine_quality <- read.csv("../Data/wineQualityReds.csv")
summary(wine_quality)
wine_quality$quality <- factor(ordered(wine_quality$quality))
str(wine_quality$quality)
summary(wine_quality$quality)
ggplot(data = wine_quality, aes(x = quality)) + geom_bar(stat = "count")
qual_mean <- mean(as.numeric(levels(wine_quality$quality)[wine_quality$quality]))
qual_sd <- sd(as.numeric(levels(wine_quality$quality)[wine_quality$quality]))
qual_mean
qual_sd
ggplot(data = wine_quality, aes(x = fixed.acidity)) + geom_histogram(binwidth = 0.2)
ggplot(data = wine_quality, aes(x = volatile.acidity)) + geom_histogram(binwidth = 0.03)
ggplot(data = wine_quality, aes(x = citric.acid)) + geom_histogram(binwidth = 0.01)
#wine_quality$citric.acid
cond <- wine_quality$citric.acid == 0.49
wine_quality[cond,]
ggplot(data = wine_quality, aes(x = pH)) + geom_histogram(binwidth = 0.02)
ggplot(data = wine_quality, aes(x = free.sulfur.dioxide)) + geom_histogram(binwidth = 1)
ggplot(data = wine_quality, aes(x = total.sulfur.dioxide)) + geom_histogram(binwidth = 3)
ggplot(data = wine_quality, aes(x = sulphates)) + geom_histogram(binwidth = 0.02)
ggplot(data = wine_quality, aes(x = alcohol)) + geom_histogram(binwidth = 0.1)
ggplot(data = wine_quality, aes(x = density)) + geom_histogram(binwidth = 0.0002)
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(limits = c(0, 6))
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(limits = c(0, 6))
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(limits = c(3, 6))
str(wine_quality)
ggpairs(wine_quality)
help(ggpairs)
help('ggpairs')
help(??ggpairs)
help('??ggpairs')
??ggpairs
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(gridExtra)
library(GGally)
library(reshape2)
# Load the Data
wine_quality <- read.csv("../Data/wineQualityReds.csv")
summary(wine_quality)
wine_quality$quality <- factor(ordered(wine_quality$quality))
str(wine_quality$quality)
summary(wine_quality$quality)
ggplot(data = wine_quality, aes(x = quality)) + geom_bar(stat = "count")
qual_mean <- mean(as.numeric(levels(wine_quality$quality)[wine_quality$quality]))
qual_sd <- sd(as.numeric(levels(wine_quality$quality)[wine_quality$quality]))
qual_mean
qual_sd
ggplot(data = wine_quality, aes(x = fixed.acidity)) + geom_histogram(binwidth = 0.2)
ggplot(data = wine_quality, aes(x = volatile.acidity)) + geom_histogram(binwidth = 0.03)
ggplot(data = wine_quality, aes(x = citric.acid)) + geom_histogram(binwidth = 0.01)
#wine_quality$citric.acid
cond <- wine_quality$citric.acid == 0.49
wine_quality[cond,]
ggplot(data = wine_quality, aes(x = pH)) + geom_histogram(binwidth = 0.02)
ggplot(data = wine_quality, aes(x = free.sulfur.dioxide)) + geom_histogram(binwidth = 1)
ggplot(data = wine_quality, aes(x = total.sulfur.dioxide)) + geom_histogram(binwidth = 3)
ggplot(data = wine_quality, aes(x = sulphates)) + geom_histogram(binwidth = 0.02)
ggplot(data = wine_quality, aes(x = alcohol)) + geom_histogram(binwidth = 0.1)
ggplot(data = wine_quality, aes(x = density)) + geom_histogram(binwidth = 0.0002)
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(limits = c(0, 6))
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(limits = c(0, 6))
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(limits = c(3, 6))
str(wine_quality)
ggpairs(wine_quality)
wq.sub.pairs <- subset(wine_quality, -X)
View(wine_quality)
wq.sub.pairs <- subset(wine_quality, -c(X))
wq.sub.pairs <- subset(wine_quality, -c('X'))
wq.names.acid <- c("fixed.acidity", "volatile.acidity", "citric.acid", "quality")
wq.sub.acid <- wine_quality[wq.names.acid]
ggpairs(wq.sub.acid)
names(wine_quality)
wq.names.sulphur <- c("free.sulfur.dioxide", "total.sulfur.dioxide", "sulphates", "quality")
wq.sub.sulphur <- wine_quality[wq.names.sulphur]
ggpairs(wq.sub.sulphur)
wq.names.sulphur <- c("free.sulfur.dioxide", "total.sulfur.dioxide", "sulphates", "chlorides", "quality")
wq.sub.sulphur <- wine_quality[wq.names.sulphur]
ggpairs(wq.sub.sulphur)
wq.names.acid <- c("fixed.acidity", "volatile.acidity", "citric.acid", "pH", "quality")
wq.sub.acid <- wine_quality[wq.names.acid]
ggpairs(wq.sub.acid)
wq.names.acid <- c("quality", "pH", "fixed.acidity", "volatile.acidity", "citric.acid")
wq.sub.acid <- wine_quality[wq.names.acid]
ggpairs(wq.sub.acid)
wq.names.acid <- c("fixed.acidity", "volatile.acidity", "citric.acid", "pH", "quality")
wq.sub.acid <- wine_quality[wq.names.acid]
ggpairs(wq.sub.acid)
# http://stackoverflow.com/questions/34975190/set-alpha-and-remove-black-outline-of-density-plots-in-ggpairs
ggscatalpha <- function(data, mapping, ...) {
ggplot(data = data, mapping = mapping) +
geom_point(..., alpha = 0.25)
}
ggdnesalpha <- function(data, mapping, ...) {
ggplot(data = data, mapping = mapping) +
geom_density(..., alpha = 0.25)
}
wq.names.acid <- c("fixed.acidity", "volatile.acidity", "citric.acid", "pH")
ggpairs(wine_quality,
columns = wq.names.acid,
mapping = aes(color = quality),
lower = list(continuous = ggscatalpha),
diag = list(continuous = ggdensalpha))
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(gridExtra)
library(GGally)
library(reshape2)
# Load the Data
wine_quality <- read.csv("../Data/wineQualityReds.csv")
summary(wine_quality)
wine_quality$quality <- factor(ordered(wine_quality$quality))
str(wine_quality$quality)
summary(wine_quality$quality)
ggplot(data = wine_quality, aes(x = quality)) + geom_bar(stat = "count")
qual_mean <- mean(as.numeric(levels(wine_quality$quality)[wine_quality$quality]))
qual_sd <- sd(as.numeric(levels(wine_quality$quality)[wine_quality$quality]))
qual_mean
qual_sd
ggplot(data = wine_quality, aes(x = fixed.acidity)) + geom_histogram(binwidth = 0.2)
ggplot(data = wine_quality, aes(x = volatile.acidity)) + geom_histogram(binwidth = 0.03)
ggplot(data = wine_quality, aes(x = citric.acid)) + geom_histogram(binwidth = 0.01)
#wine_quality$citric.acid
cond <- wine_quality$citric.acid == 0.49
wine_quality[cond,]
ggplot(data = wine_quality, aes(x = pH)) + geom_histogram(binwidth = 0.02)
ggplot(data = wine_quality, aes(x = free.sulfur.dioxide)) + geom_histogram(binwidth = 1)
ggplot(data = wine_quality, aes(x = total.sulfur.dioxide)) + geom_histogram(binwidth = 3)
ggplot(data = wine_quality, aes(x = sulphates)) + geom_histogram(binwidth = 0.02)
ggplot(data = wine_quality, aes(x = alcohol)) + geom_histogram(binwidth = 0.1)
ggplot(data = wine_quality, aes(x = density)) + geom_histogram(binwidth = 0.0002)
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_histogram(binwidth = 0.1)
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(limits = c(0, 6))
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_histogram(binwidth = 0.1) +
scale_x_continuous(limits = c(3, 6))
str(wine_quality)
# http://stackoverflow.com/questions/34975190/set-alpha-and-remove-black-outline-of-density-plots-in-ggpairs
ggscatalpha <- function(data, mapping, ...) {
ggplot(data = data, mapping = mapping) +
geom_point(..., alpha = 0.25)
}
ggdnesalpha <- function(data, mapping, ...) {
ggplot(data = data, mapping = mapping) +
geom_density(..., alpha = 0.25)
}
wq.names.acid <- c("fixed.acidity", "volatile.acidity", "citric.acid", "pH")
ggpairs(wine_quality,
columns = wq.names.acid,
mapping = aes(color = quality),
lower = list(continuous = ggscatalpha),
diag = list(continuous = ggdensalpha))
# http://stackoverflow.com/questions/34975190/set-alpha-and-remove-black-outline-of-density-plots-in-ggpairs
ggscatalpha <- function(data, mapping, ...) {
ggplot(data = data, mapping = mapping) +
geom_point(..., alpha = 0.25)
}
ggdensalpha <- function(data, mapping, ...) {
ggplot(data = data, mapping = mapping) +
geom_density(..., alpha = 0.25)
}
wq.names.acid <- c("fixed.acidity", "volatile.acidity", "citric.acid", "pH")
ggpairs(wine_quality,
columns = wq.names.acid,
mapping = aes(color = quality),
lower = list(continuous = ggscatalpha),
diag = list(continuous = ggdensalpha))
setwd('C:/Users/Mahlon/Source/Repos/DAND-P4-Explore-and-Summarize-Data/project/')
