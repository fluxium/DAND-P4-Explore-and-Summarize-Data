stat_summary(aes(x = quality, y = volatile.acidity), fun.y = mean, geom = "line", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", show.legend = FALSE, aes(x = quality, y = volatile.acidity, group = quality))
# To get the grouping correct the aesetics had to be moved in to each geom
ggplot(wine_quality) +
geom_boxplot(aes(x = quality, y = alcohol, group = quality)) +
stat_summary(aes(x = quality, y = alcohol), fun.y = mean, geom = "line", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", show.legend = FALSE, aes(x = quality, y = alcohol, group = quality))
# To get the grouping correct the aesetics had to be moved in to each geom
ggplot(wine_quality) +
geom_boxplot(aes(x = quality, y = alcohol, group = quality)) +
stat_summary(aes(x = quality, y = alcohol), fun.y = mean, geom = "line", shape = "m", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", show.legend = FALSE, aes(x = quality, y = alcohol, group = quality))
# To get the grouping correct the aesetics had to be moved in to each geom
ggplot(wine_quality) +
geom_boxplot(aes(x = quality, y = alcohol, group = quality)) +
stat_summary(aes(x = quality, y = alcohol), fun.y = mean, geom = "line", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", shape = "m", show.legend = FALSE, aes(x = quality, y = alcohol, group = quality))
# To get the grouping correct the aesetics had to be moved in to each geom
ggplot(wine_quality) +
geom_boxplot(aes(x = quality, y = alcohol, group = quality)) +
stat_summary(aes(x = quality, y = alcohol), fun.y = mean, geom = "line", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", shape = "m", size = 5, show.legend = FALSE, aes(x = quality, y = alcohol, group = quality))
# To get the grouping correct the aesetics had to be moved in to each geom
ggplot(wine_quality) +
geom_boxplot(aes(x = quality, y = alcohol, group = quality)) +
stat_summary(aes(x = quality, y = alcohol), fun.y = mean, geom = "line", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", shape = "m", size = 1, show.legend = FALSE, aes(x = quality, y = alcohol, group = quality))
# To get the grouping correct the aesetics had to be moved in to each geom
ggplot(wine_quality) +
geom_boxplot(aes(x = quality, y = alcohol, group = quality)) +
stat_summary(aes(x = quality, y = alcohol), fun.y = mean, geom = "line", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", shape = "m", size = 2, show.legend = FALSE, aes(x = quality, y = alcohol, group = quality))
# To get the grouping correct the aesetics had to be moved in to each geom
ggplot(wine_quality) +
geom_boxplot(aes(x = quality, y = volatile.acidity, group = quality)) +
stat_summary(aes(x = quality, y = volatile.acidity), fun.y = mean, geom = "line", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", shape = "m", size = 2, show.legend = FALSE, aes(x = quality, y = volatile.acidity, group = quality))
# To get the grouping correct the aesetics had to be moved in to each geom
ggplot(wine_quality) +
geom_boxplot(aes(x = quality, y = alcohol, group = quality)) +
stat_summary(aes(x = quality, y = alcohol), fun.y = mean, geom = "line", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", shape = "m", size = 2, show.legend = FALSE, aes(x = quality, y = alcohol, group = quality)) +
scale_x_discrete()
# To get the grouping correct the aesetics had to be moved in to each geom
ggplot(wine_quality) +
geom_boxplot(aes(x = quality, y = alcohol, group = quality)) +
stat_summary(aes(x = quality, y = alcohol), fun.y = mean, geom = "line", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", shape = "m", size = 2, show.legend = FALSE, aes(x = quality, y = alcohol, group = quality)) +
scale_x_continuous()
# To get the grouping correct the aesetics had to be moved in to each geom
ggplot(wine_quality, breaks = 5) +
geom_boxplot(aes(x = quality, y = alcohol, group = quality)) +
stat_summary(aes(x = quality, y = alcohol), fun.y = mean, geom = "line", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", shape = "m", size = 2, show.legend = FALSE, aes(x = quality, y = alcohol, group = quality)) +
# To get the grouping correct the aesetics had to be moved in to each geom
ggplot(wine_quality) +
geom_boxplot(aes(x = quality, y = alcohol, group = quality)) +
stat_summary(aes(x = quality, y = alcohol), fun.y = mean, geom = "line", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", shape = "m", size = 2, show.legend = FALSE, aes(x = quality, y = alcohol, group = quality)) +
scale_x_continuous(breaks = 5)
# To get the grouping correct the aesetics had to be moved in to each geom
ggplot(wine_quality) +
geom_boxplot(aes(x = quality, y = alcohol, group = quality)) +
stat_summary(aes(x = quality, y = alcohol), fun.y = mean, geom = "line", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", shape = "m", size = 2, show.legend = FALSE, aes(x = quality, y = alcohol, group = quality)) +
scale_x_continuous(breaks = c(3:8))
# To get the grouping correct the aesetics had to be moved in to each geom
ggplot(wine_quality) +
geom_boxplot(aes(x = quality, y = volatile.acidity, group = quality)) +
stat_summary(aes(x = quality, y = volatile.acidity), fun.y = mean, geom = "line", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", shape = "m", size = 2, show.legend = FALSE, aes(x = quality, y = volatile.acidity, group = quality)) +
scale_x_continuous(breaks = c(3:8))
# To get the grouping correct the aesetics had to be moved in to each geom
ggplot(wine_quality) +
geom_boxplot(aes(x = quality, y = volatile.acidity, group = quality)) +
stat_summary(aes(x = quality, y = volatile.acidity), fun.y = mean, geom = "line", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", shape = "µ", size = 2, show.legend = FALSE, aes(x = quality, y = volatile.acidity, group = quality)) +
scale_x_continuous(breaks = c(3:8))
# To get the grouping correct the aesetics had to be moved in to each geom
ggplot(wine_quality) +
geom_boxplot(aes(x = quality, y = alcohol, group = quality)) +
stat_summary(aes(x = quality, y = alcohol), fun.y = mean, geom = "line", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", shape = "µ", size = 2, show.legend = FALSE, aes(x = quality, y = alcohol, group = quality)) +
scale_x_continuous(breaks = c(3:8))
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(gridExtra)
library(GGally)
library(reshape2)
# Load the Data
wine_quality <- read.csv("../Data/wineQualityReds.csv")
summary(wine_quality)
wine_quality$quality <- factor(ordered(wine_quality$quality))
str(wine_quality$quality)
summary(wine_quality$quality)
ggplot(data = wine_quality, aes(x = quality)) + geom_bar(stat = "count")
qual_mean <- mean(as.numeric(levels(wine_quality$quality)[wine_quality$quality]))
qual_sd <- sd(as.numeric(levels(wine_quality$quality)[wine_quality$quality]))
qual_mean
qual_sd
ggplot(data = wine_quality, aes(x = fixed.acidity)) + geom_density()
ggplot(data = wine_quality, aes(x = volatile.acidity)) + geom_density()
ggplot(data = wine_quality, aes(x = citric.acid)) + geom_density()
ggplot(data = wine_quality, aes(x = citric.acid)) + geom_histogram(binwidth = 0.01)
# http://mgimond.github.io/ES218/Week05a.html
ggplot(wine_quality, aes(x=1, y=citric.acid)) +
geom_boxplot() +
xlab(NULL) +
theme(axis.text.y=element_blank()) +
coord_flip() +
scale_y_continuous(limits = c(0, 1.1), breaks = seq(0, 1.1, 0.1))
ggplot(data = wine_quality, aes(x = pH)) + geom_density()
ggplot(data = wine_quality, aes(x = free.sulfur.dioxide)) + geom_density()
ggplot(data = wine_quality, aes(x = total.sulfur.dioxide)) + geom_density()
ggplot(data = wine_quality, aes(x = sulphates)) + geom_density()
ggplot(data = wine_quality, aes(x = alcohol)) + geom_density()
ggplot(data = wine_quality, aes(x = density)) + geom_density()
ggplot(aes(x = residual.sugar), data = wine_quality) + geom_density()
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_density() +
scale_x_continuous(limits = c(0, 6))
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_density() +
scale_x_continuous(limits = c(3, 7))
# http://mgimond.github.io/ES218/Week05a.html
ggplot(wine_quality, aes(x=1, y=residual.sugar)) +
geom_boxplot() +
xlab(NULL) +
theme(axis.text.y=element_blank()) +
coord_flip() +
scale_y_continuous(limits = c(0, 17), breaks = seq(0, 17, 1))
str(wine_quality)
wq <- wine_quality[, !(names(wine_quality) %in% c("X"))]
wq$quality <- as.numeric(levels(wq$quality)[wq$quality])
wq.cor <- cor(wq)
data.frame(wq.cor)
# Using default continuous color map
ggcorr(wq, label = TRUE, hjust = 0.9, layout.exp = 2)
# Using default descrete color map
ggcorr(wq, nbreaks = 3, label = TRUE, hjust = 0.9, layout.exp = 2)
ggplot(wine_quality, aes(x = quality, y = alcohol)) +
geom_jitter(alpha = 1/10)
# To get the grouping correct the aesetics had to be moved in to each geom
ggplot(wine_quality) +
geom_boxplot(aes(x = quality, y = alcohol, group = quality)) +
stat_summary(aes(x = quality, y = alcohol), fun.y = mean, geom = "line", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", shape = "µ", size = 2, show.legend = FALSE, aes(x = quality, y = alcohol, group = quality)) +
scale_x_continuous(breaks = c(3:8))
# To get the grouping correct the aesetics had to be moved in to each geom
ggplot(wine_quality) +
geom_boxplot(aes(x = quality, y = alcohol, group = quality)) +
stat_summary(aes(x = quality, y = alcohol), fun.y = mean, geom = "line", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", shape = "µ", size = 2, show.legend = FALSE, aes(x = quality, y = alcohol, group = quality))
# To get the grouping correct the aesetics had to be moved in to each geom
ggplot(wine_quality) +
stat_summary(aes(x = quality, y = alcohol), fun.y = mean, geom = "line", show.legend = FALSE) +
geom_boxplot(aes(x = quality, y = alcohol, group = quality)) +
stat_summary(fun.y = mean, geom = "point", shape = "µ", size = 2, show.legend = FALSE, aes(x = quality, y = alcohol, group = quality))
# To get the grouping correct the aesetics had to be moved in to each geom
ggplot(wine_quality) +
geom_boxplot(aes(x = quality, y = volatile.acidity, group = quality)) +
stat_summary(aes(x = quality, y = volatile.acidity), fun.y = mean, geom = "line", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", shape = "µ", size = 2, show.legend = FALSE, aes(x = quality, y = volatile.acidity, group = quality))
# To get the grouping correct the aesetics had to be moved in to each geom
ggplot(wine_quality) +
stat_summary(aes(x = quality, y = alcohol,  group = quality), fun.y = mean, geom = "line", show.legend = FALSE) +
geom_boxplot(aes(x = quality, y = alcohol, group = quality)) +
stat_summary(fun.y = mean, geom = "point", shape = "µ", size = 2, show.legend = FALSE, aes(x = quality, y = alcohol, group = quality))
# To get the grouping correct the aesetics had to be moved in to each geom
ggplot(wine_quality) +
stat_summary(aes(x = quality, y = alcohol, linetype = quality), fun.y = mean, geom = "line", show.legend = FALSE) +
geom_boxplot(aes(x = quality, y = alcohol, group = quality)) +
stat_summary(fun.y = mean, geom = "point", shape = "µ", size = 2, show.legend = FALSE, aes(x = quality, y = alcohol, group = quality))
# To get the grouping correct the aesetics had to be moved in to each geom
ggplot(wine_quality, aes(x = quality, y = alcohol)) +
geom_boxplot() +
stat_summary(fun.y = mean, geom = "line", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", shape = "µ", size = 2, show.legend = FALSE)
# To get the grouping correct the aesetics had to be moved in to each geom
ggplot(wine_quality, aes(x = quality, y = alcohol)) +
geom_boxplot() +
stat_summary(fun.y = mean, geom = "line", show.legend = FALSE, aes(group = 1)) +
stat_summary(fun.y = mean, geom = "point", shape = "µ", size = 2, show.legend = FALSE)
# http://stackoverflow.com/questions/3989987/joining-means-on-a-boxplot-with-a-line-ggplot2
ggplot(wine_quality, aes(x = quality, y = volatile.acidity)) +
geom_boxplot() +
stat_summary(fun.y = mean, geom = "line", show.legend = FALSE, aes(group = 1)) +
stat_summary(fun.y = mean, geom = "point", shape = "µ", size = 2, show.legend = FALSE)
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(gridExtra)
library(GGally)
library(reshape2)
# Load the Data
wine_quality <- read.csv("../Data/wineQualityReds.csv")
summary(wine_quality)
wine_quality$quality <- factor(ordered(wine_quality$quality))
str(wine_quality$quality)
summary(wine_quality$quality)
ggplot(data = wine_quality, aes(x = quality)) + geom_bar(stat = "count")
qual_mean <- mean(as.numeric(levels(wine_quality$quality)[wine_quality$quality]))
qual_sd <- sd(as.numeric(levels(wine_quality$quality)[wine_quality$quality]))
qual_mean
qual_sd
ggplot(data = wine_quality, aes(x = fixed.acidity)) + geom_density()
ggplot(data = wine_quality, aes(x = volatile.acidity)) + geom_density()
ggplot(data = wine_quality, aes(x = citric.acid)) + geom_density()
ggplot(data = wine_quality, aes(x = citric.acid)) + geom_histogram(binwidth = 0.01)
# http://mgimond.github.io/ES218/Week05a.html
ggplot(wine_quality, aes(x=1, y=citric.acid)) +
geom_boxplot() +
xlab(NULL) +
theme(axis.text.y=element_blank()) +
coord_flip() +
scale_y_continuous(limits = c(0, 1.1), breaks = seq(0, 1.1, 0.1))
ggplot(data = wine_quality, aes(x = pH)) + geom_density()
ggplot(data = wine_quality, aes(x = free.sulfur.dioxide)) + geom_density()
ggplot(data = wine_quality, aes(x = total.sulfur.dioxide)) + geom_density()
ggplot(data = wine_quality, aes(x = sulphates)) + geom_density()
ggplot(data = wine_quality, aes(x = alcohol)) + geom_density()
ggplot(data = wine_quality, aes(x = density)) + geom_density()
ggplot(aes(x = residual.sugar), data = wine_quality) + geom_density()
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_density() +
scale_x_continuous(limits = c(0, 6))
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_density() +
scale_x_continuous(limits = c(3, 7))
# http://mgimond.github.io/ES218/Week05a.html
ggplot(wine_quality, aes(x=1, y=residual.sugar)) +
geom_boxplot() +
xlab(NULL) +
theme(axis.text.y=element_blank()) +
coord_flip() +
scale_y_continuous(limits = c(0, 17), breaks = seq(0, 17, 1))
str(wine_quality)
wq <- wine_quality[, !(names(wine_quality) %in% c("X"))]
wq$quality <- as.numeric(levels(wq$quality)[wq$quality])
wq.cor <- cor(wq)
data.frame(wq.cor)
# Using default continuous color map
ggcorr(wq, label = TRUE, hjust = 0.9, layout.exp = 2)
# Using default descrete color map
ggcorr(wq, nbreaks = 3, label = TRUE, hjust = 0.9, layout.exp = 2)
ggplot(wine_quality, aes(x = quality, y = alcohol)) +
geom_jitter(alpha = 1/10)
# http://stackoverflow.com/questions/3989987/joining-means-on-a-boxplot-with-a-line-ggplot2
ggplot(wine_quality, aes(x = quality, y = alcohol)) +
geom_boxplot() +
stat_summary(fun.y = mean, geom = "line", show.legend = FALSE, aes(group = 1)) +
stat_summary(fun.y = mean, geom = "point", shape = "µ", size = 2, show.legend = FALSE)
summary(wine_quality$quality)
# http://stackoverflow.com/questions/3989987/joining-means-on-a-boxplot-with-a-line-ggplot2
ggplot(wine_quality, aes(x = quality, y = volatile.acidity)) +
geom_boxplot() +
stat_summary(fun.y = mean, geom = "line", show.legend = FALSE, aes(group = 1)) +
stat_summary(fun.y = mean, geom = "point", shape = "µ", size = 2, show.legend = FALSE)
summary(wine_quality$quality)
summary(wine_quality$quality)
# http://stackoverflow.com/questions/34975190/set-alpha-and-remove-black-outline-of-density-plots-in-ggpairs
ggscatalpha <- function(data, mapping, ...) {
ggplot(data = data, mapping = mapping) +
geom_point(..., alpha = 0.25)
}
ggdensalpha <- function(data, mapping, ...) {
ggplot(data = data, mapping = mapping) +
geom_density(..., alpha = 0.25)
}
wq.names.acid <- c("fixed.acidity", "volatile.acidity", "citric.acid", "pH")
ggpairs(wine_quality,
columns = wq.names.acid,
mapping = aes(color = quality),
lower = list(continuous = ggscatalpha),
diag = list(continuous = ggdensalpha))
wq.names.sulphur <- c("free.sulfur.dioxide", "total.sulfur.dioxide", "sulphates", "chlorides")
ggpairs(wine_quality,
columns = wq.names.sulphur,
mapping = aes(color = quality),
lower = list(continuous = ggscatalpha),
diag = list(continuous = ggdensalpha))
wq.names.alcohol <- c("alcohol", "residual.sugar", "density")
ggpairs(wine_quality,
columns = wq.names.alcohol,
mapping = aes(color = quality),
lower = list(continuous = ggscatalpha),
diag = list(continuous = ggdensalpha))
ggplot(wine_quality, aes(x = sulphates, y = chlorides)) +
geom_point()
ggplot(wine_quality, aes(x = sulphates, y = chlorides)) +
geom_point(alpha = 1/10)
ggplot(wine_quality, aes(x = sulphates, y = chlorides)) +
geom_point(alpha = 1/10) +
geom_density()
ggplot(wine_quality, aes(x = sulphates, y = chlorides)) +
geom_point(alpha = 1/10) +
ggplot(wine_quality, aes(x = sulphates, y = chlorides)) +
geom_point(alpha = 1/10)
setwd("C:/Users/Mahlon/Source/Repos/DAND-P4-Explore-and-Summarize-Data/project")
load(.rdata)
load(".rdata")
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(gridExtra)
library(GGally)
library(reshape2)
# Load the Data
wine_quality <- read.csv("../Data/wineQualityReds.csv")
ggplot(wine_quality, aes(x = citric.acid, y = volatile.acidity)) +
geom_point()
ggplot(wine_quality, aes(x = citric.acid, y = volatile.acidity)) +
geom_point(alpha = 1/10)
ggplot(aes(x = chlorides), data = wine_quality) +
geom_density() +
ggplot(aes(x = chlorides), data = wine_quality) +
geom_density()
ggplot(wine_quality, aes(x = sulphates, y = chlorides)) +
geom_point(alpha = 1/15)
ggplot(wine_quality, aes(x = sulphates, y = chlorides)) +
geom_point(alpha = 1/20)
ggplot(wine_quality, aes(x = sulphates, y = chlorides)) +
geom_point(alpha = 1/15)
ggplot(wine_quality, aes(x = citric.acid, y = volatile.acidity)) +
geom_point(alpha = 1/10) +
scale_x_continuous(limits = c(0.48, 1.0))
ggplot(wine_quality, aes(x = citric.acid, y = volatile.acidity)) +
geom_point(alpha = 1/10) +
scale_x_continuous(limits = c(0.48, 1.0), breaks = seq(0.48, 1.0, 0.05))
ggplot(wine_quality, aes(x = citric.acid, y = volatile.acidity)) +
geom_point(alpha = 1/10) +
scale_x_continuous(limits = c(0.45, 1.0), breaks = seq(0.45, 1.0, 0.05))
ggplot(wine_quality, aes(x = citric.acid, y = volatile.acidity)) +
geom_point(alpha = 1/10) +
scale_x_continuous(limits = c(0.3, 1.0), breaks = seq(0.3, 1.0, 0.05))
# http://stackoverflow.com/questions/3989987/joining-means-on-a-boxplot-with-a-line-ggplot2
ggplot(wine_quality, aes(x = quality, y = sulphates)) +
geom_boxplot() +
# aes(group = 1) added to line plot forces stat_summary to be scoped to pre-aggregated data so line can connect means from each group
stat_summary(aes(group = 1), fun.y = mean, geom = "line", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", shape = "µ", size = 2, show.legend = FALSE)
# Load all of the packages that you end up using
# in your analysis in this code chunk.
# Notice that the parameter "echo" was set to FALSE for this code chunk.
# This prevents the code from displaying in the knitted HTML output.
# You should set echo=FALSE for all code chunks in your file.
library(ggplot2)
library(dplyr)
library(tidyr)
library(lubridate)
library(gridExtra)
library(GGally)
library(reshape2)
# Load the Data
wine_quality <- read.csv("../Data/wineQualityReds.csv")
summary(wine_quality)
wine_quality$quality <- factor(ordered(wine_quality$quality))
str(wine_quality$quality)
summary(wine_quality$quality)
ggplot(data = wine_quality, aes(x = quality)) + geom_bar(stat = "count")
qual_mean <- mean(as.numeric(levels(wine_quality$quality)[wine_quality$quality]))
qual_sd <- sd(as.numeric(levels(wine_quality$quality)[wine_quality$quality]))
qual_mean
qual_sd
ggplot(data = wine_quality, aes(x = fixed.acidity)) + geom_density()
ggplot(data = wine_quality, aes(x = volatile.acidity)) + geom_density()
ggplot(data = wine_quality, aes(x = citric.acid)) + geom_density()
ggplot(data = wine_quality, aes(x = citric.acid)) + geom_histogram(binwidth = 0.01)
# http://mgimond.github.io/ES218/Week05a.html
ggplot(wine_quality, aes(x=1, y=citric.acid)) +
geom_boxplot() +
xlab(NULL) +
theme(axis.text.y=element_blank()) +
coord_flip() +
scale_y_continuous(limits = c(0, 1.1), breaks = seq(0, 1.1, 0.1))
ggplot(data = wine_quality, aes(x = pH)) + geom_density()
ggplot(data = wine_quality, aes(x = free.sulfur.dioxide)) + geom_density()
ggplot(data = wine_quality, aes(x = total.sulfur.dioxide)) + geom_density()
ggplot(data = wine_quality, aes(x = sulphates)) + geom_density()
ggplot(data = wine_quality, aes(x = alcohol)) + geom_density()
ggplot(data = wine_quality, aes(x = density)) + geom_density()
ggplot(aes(x = residual.sugar), data = wine_quality) + geom_density()
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_density() +
scale_x_continuous(limits = c(0, 6))
ggplot(aes(x = residual.sugar), data = wine_quality) +
geom_density() +
scale_x_continuous(limits = c(3, 7))
# http://mgimond.github.io/ES218/Week05a.html
ggplot(wine_quality, aes(x=1, y=residual.sugar)) +
geom_boxplot() +
xlab(NULL) +
theme(axis.text.y=element_blank()) +
coord_flip() +
scale_y_continuous(limits = c(0, 17), breaks = c(0:17))
ggplot(aes(x = chlorides), data = wine_quality) +
geom_density()
str(wine_quality)
wq <- wine_quality[, !(names(wine_quality) %in% c("X"))]
wq$quality <- as.numeric(levels(wq$quality)[wq$quality])
wq.cor <- cor(wq)
data.frame(wq.cor)
# Using default continuous color map
ggcorr(wq, label = TRUE, hjust = 0.9, layout.exp = 2)
# Using default descrete color map
ggcorr(wq, nbreaks = 3, label = TRUE, hjust = 0.9, layout.exp = 2)
ggplot(wine_quality, aes(x = quality, y = alcohol)) +
geom_jitter(alpha = 1/10)
# http://stackoverflow.com/questions/3989987/joining-means-on-a-boxplot-with-a-line-ggplot2
ggplot(wine_quality, aes(x = quality, y = alcohol)) +
geom_boxplot() +
# aes(group = 1) added to line plot forces stat_summary to be scoped to pre-aggregated data so line can connect means from each group
stat_summary(aes(group = 1), fun.y = mean, geom = "line", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", shape = "µ", size = 2, show.legend = FALSE)
summary(wine_quality$quality)
# http://stackoverflow.com/questions/3989987/joining-means-on-a-boxplot-with-a-line-ggplot2
ggplot(wine_quality, aes(x = quality, y = volatile.acidity)) +
geom_boxplot() +
# aes(group = 1) added to line plot forces stat_summary to be scoped to pre-aggregated data so line can connect means from each group
stat_summary(aes(group = 1), fun.y = mean, geom = "line", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", shape = "µ", size = 2, show.legend = FALSE)
# http://stackoverflow.com/questions/3989987/joining-means-on-a-boxplot-with-a-line-ggplot2
ggplot(wine_quality, aes(x = quality, y = sulphates)) +
geom_boxplot() +
# aes(group = 1) added to line plot forces stat_summary to be scoped to pre-aggregated data so line can connect means from each group
stat_summary(aes(group = 1), fun.y = mean, geom = "line", show.legend = FALSE) +
stat_summary(fun.y = mean, geom = "point", shape = "µ", size = 2, show.legend = FALSE)
ggplot(wine_quality, aes(x = sulphates, y = chlorides)) +
geom_point(alpha = 1/15)
ggplot(wine_quality, aes(x = citric.acid, y = volatile.acidity)) +
geom_point(alpha = 1/10)
ggplot(wine_quality, aes(x = citric.acid, y = volatile.acidity)) +
geom_point(alpha = 1/10) +
scale_x_continuous(limits = c(0.3, 1.0), breaks = seq(0.3, 1.0, 0.05))
# http://stackoverflow.com/questions/34975190/set-alpha-and-remove-black-outline-of-density-plots-in-ggpairs
ggscatalpha <- function(data, mapping, ...) {
ggplot(data = data, mapping = mapping) +
geom_point(..., alpha = 0.25)
}
ggdensalpha <- function(data, mapping, ...) {
ggplot(data = data, mapping = mapping) +
geom_density(..., alpha = 0.25)
}
wq.names.acid <- c("fixed.acidity", "volatile.acidity", "citric.acid", "pH")
ggpairs(wine_quality,
columns = wq.names.acid,
mapping = aes(color = quality),
lower = list(continuous = ggscatalpha),
diag = list(continuous = ggdensalpha))
wq.names.sulphur <- c("free.sulfur.dioxide", "total.sulfur.dioxide", "sulphates", "chlorides")
ggpairs(wine_quality,
columns = wq.names.sulphur,
mapping = aes(color = quality),
lower = list(continuous = ggscatalpha),
diag = list(continuous = ggdensalpha))
wq.names.alcohol <- c("alcohol", "residual.sugar", "density")
ggpairs(wine_quality,
columns = wq.names.alcohol,
mapping = aes(color = quality),
lower = list(continuous = ggscatalpha),
diag = list(continuous = ggdensalpha))
ggplot(wine_quality, aes(x = citric.acid, y = volatile.acidity)) +
geom_point(alpha = 1/10) +
scale_x_continuous(limits = c(0.3, 1.0), breaks = seq(0.3, 1.0, 0.05)) +
stat_summary(fun.y = mean, geom = "line", show.legend = FALSE)
ggplot(wine_quality, aes(x = citric.acid, y = volatile.acidity)) +
geom_point(alpha = 1/10) +
scale_x_continuous(limits = c(0.3, 1.0), breaks = seq(0.3, 1.0, 0.05)) +
stat_summary(aes(group = 1) ,fun.y = mean, geom = "line", show.legend = FALSE)
ggplot(wine_quality, aes(x = citric.acid, y = volatile.acidity)) +
geom_point(alpha = 1/10) +
scale_x_continuous(limits = c(0.3, 1.0), breaks = seq(0.3, 1.0, 0.05)) +
stat_summary(aes(group = citric.acid) ,fun.y = mean, geom = "line", show.legend = FALSE)
ggplot(wine_quality, aes(x = citric.acid, y = volatile.acidity)) +
geom_point(alpha = 1/10) +
scale_x_continuous(limits = c(0.3, 1.0), breaks = seq(0.3, 1.0, 0.05)) +
stat_summary(fun.y = smooth, geom = "line", show.legend = FALSE)
ggplot(wine_quality, aes(x = citric.acid, y = volatile.acidity)) +
geom_point(alpha = 1/10) +
scale_x_continuous(limits = c(0.3, 1.0), breaks = seq(0.3, 1.0, 0.05)) +
stat_smooth()
ggplot(wine_quality, aes(x = citric.acid, y = volatile.acidity)) +
geom_point(alpha = 1/10) +
scale_x_continuous(limits = c(0.3, 1.0), breaks = seq(0.3, 1.0, 0.05)) +
stat_smooth(method = "lm")
help stat_smooth()
help stat_smooth
help("stat_smooth")
ggplot(wine_quality, aes(x = citric.acid, y = volatile.acidity)) +
geom_point(alpha = 1/10) +
scale_x_continuous(limits = c(0.3, 1.0), breaks = seq(0.3, 1.0, 0.05)) +
stat_smooth(method = "lm") +
stat_smooth(method = "gam")
