# How is the upper end is changing in the data set, seems like access
source('C:/Users/Mahlon/Source/Repos/DAND-P4-Explore-and-Summarize-Data/EDA_Course_Materials/lesson3/lesson3_problemset.R', echo=TRUE)
# setwd for Home workstation
setwd("C:/Users/Mahlon/Source/Repos/DAND-P4-Explore-and-Summarize-Data/EDA_Course_Materials/lesson4")
load('.rdata')
library(ggplot2)
library(tidyr)
library(dplyr)
library(xlsx)
library(lubridate)
rm(bdays, Mitchell, pf, pf.fc_by_age, pf.fc_by_age_months, ys, ysmen, yswomen)
rm(gnp, month_end, month_lim, month_start, temp_name, x, y, z)
ggplot(data = diamonds, aes(x = carat, y = price), xlim = ) +
geom_point() +
scale_x_continuous()
price_lim = diamonds$price
price_lim = quantile(price_lim, c(.99))
price-lim
price_lim
ggplot(data = diamonds, aes(x = carat, y = price),
xlim = quantile(carat, c(0.99)),
ylim = quantile(price, c(0.99))) +
geom_point() +
scale_x_continuous()
ggsave('price_v_carat_wo_quantile.png')
ggplot(data = diamonds, aes(x = carat, y = price)) +
geom_point() +
scale_x_continuous()
quantile(carat, c(0.99))
price_lim
price_lim[0]
price_lim[1]
price_lim[[1]]
price_lim = quantile(diamonds$price, c(.99))[[1]]
carat_lim = quantile(diamonds$carat, c(.99))[[1]]
ggplot(data = diamonds, aes(x = carat, y = price),
xlim = c(0, carat_lim),
ylim = c(0, price_lim)) +
geom_point() +
scale_x_continuous()
ggplot(data = diamonds, aes(x = carat, y = price)) +
geom_point() +
scale_x_continuous(limits = c(0, carat_lim)) +
scale_y_continuous(llimits = c(0, price_lim))
ggplot(data = diamonds, aes(x = carat, y = price)) +
geom_point() +
scale_x_continuous(limits = c(0, carat_lim)) +
scale_y_continuous(limits = c(0, price_lim))
diamonds$volume <- with(data = diamonds, x * y * z)
diamonds$volume
ggplot(data = diamonds, aes(x = volume, y = price)) +
geom_point()
library(plyr)
count(diamonds$volume == 0)
detach("package:plyr", unload=TRUE)
cor.test((diamonds$volume <= 800), diamonds$price)
diamonds_cor_test <- diamonds[diamonds$volume > 0 && diamonds$volume <= 800]
diamonds_cor_test <- diamonds[diamonds$volume > 0]
diamonds_cor_test <- subset(diamonds, diamonds$volume > 0)
diamonds_cor_test <- subset(diamonds, diamonds$volume > 0 && diamonds$volume <= 800)
diamonds_cor_test <- subset(diamonds, diamonds$volume > 0 & diamonds$volume <= 800)
cor.test(diamonds_cor_test$volume, diamonds_cor_test$price)
diamonds_cor_test <- subset(diamonds, diamonds$volume > 0 & diamonds$volume <= 800)
ggplot(data = diamonds, aes(x = volume, y = price)) +
geom_point(alpha = 1/40) +
stat_smooth(method = "lm", formula = y ~ x, size = 1)
ggplot(data = diamonds_cor_test, aes(x = volume, y = price)) +
geom_point(alpha = 1/40) +
stat_smooth(method = "lm", formula = y ~ x, size = 1)
ggplot(data = diamonds_cor_test, aes(x = volume, y = price), ylim = 20000) +
geom_point(alpha = 1/40) +
stat_smooth(method = "lm", formula = y ~ x, size = 1)
ggplot(data = diamonds_cor_test, aes(x = volume, y = price)) +
geom_point(alpha = 1/40) +
scale_y_continuous(limits = c(0, 20000)) +
stat_smooth(method = "lm", formula = y ~ x, size = 1)
suppressMessages(library(ggplot2))
suppressMessages(library(dplyr))
diamondsByClarity <- group_by(diamonds, clarity) %>%
summarise(mean_price = mean(price),
median_prive = median(price),
min_price = min(price),
max_price = max(price),
n = n())
diamondsByClarity
diamondsByClarity <- group_by(diamonds, clarity) %>%
summarise(mean_price = mean(price),
median_prive = median(price),
min_price = min(price),
max_price = max(price),
n = n()) %>%
arrange(n)
diamondsByClarity
?arrange
diamondsByClarity <- group_by(diamonds, clarity) %>%
summarise(mean_price = mean(price),
median_prive = median(price),
min_price = min(price),
max_price = max(price),
n = n()) %>%
arrange(desc(n))
diamondsByClarity
diamondsByClarity <- group_by(diamonds, clarity) %>%
summarise(mean_price = mean(price),
median_prive = median(price),
min_price = min(price),
max_price = max(price),
n = n()) %>%
arrange(desc(clarity))
diamondsByClarity
diamondsByClarity <- group_by(diamonds, clarity) %>%
summarise(mean_price = mean(price),
median_prive = median(price),
min_price = min(price),
max_price = max(price),
n = n()) %>%
arrange(desc(mean_price))
diamondsByClarity
diamondsByClarity <- group_by(diamonds, clarity) %>%
summarise(mean_price = mean(price),
median_prive = median(price),
min_price = min(price),
max_price = max(price),
n = n()) %>%
arrange(desc(clarity))
diamondsByClarity
diamondsByClarity <- group_by(diamonds, clarity) %>%
summarise(mean_price = mean(price),
median_prive = median(price),
min_price = min(price),
max_price = max(price),
n = n()) %>%
arrange(clarity)
diamondsByClarity
diamondsByClarity <- group_by(diamonds, clarity) %>%
summarise(mean_price = mean(price),
median_prive = median(price),
min_price = min(price),
max_price = max(price),
n = n()) %>%
arrange(min_price)
diamondsByClarity
diamondsByClarity <- group_by(diamonds, clarity) %>%
summarise(mean_price = mean(price),
median_prive = median(price),
min_price = min(price),
max_price = max(price),
n = n()) %>%
arrange(clarity, n)
diamondsByClarity
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
install.packages('extragrid')
install.packages('extraGrid')
library(gridExtra)
diamonds_mp_by_clarity
ggplot(data = diamonds_mp_by_clarity, aes(x = clarity, y = mean_price)) +
geom_bar()
ggplot(data = diamonds_mp_by_clarity, aes(x = clarity)) +
geom_bar()
ggplot(data = diamonds_mp_by_clarity, aes(x = clarity, y = mean_price)) +
geom_bar(stat = identity)
ggplot(data = diamonds_mp_by_clarity, aes(x = clarity, y = mean_price)) +
geom_bar(stat = "identity")
ggplot(data = diamonds_mp_by_color, aes(x = color, y = mean_price)) +
geom_bar(stat = "identity")
p1 <- ggplot(data = diamonds_mp_by_clarity, aes(x = clarity, y = mean_price)) +
geom_bar(stat = "identity")
p2 <- ggplot(data = diamonds_mp_by_color, aes(x = color, y = mean_price)) +
geom_bar(stat = "identity")
grid.arrange(p1, p2)
str(diamonds$clarity)
diamonds_by_cut <- group_by(diamonds, cut)
diamonds_mp_by_cut <- summarise(diamonds_by_cut, mean_price = mean(price))
p1 <- ggplot(data = diamonds_mp_by_clarity, aes(x = clarity, y = mean_price)) +
geom_bar(stat = "identity")
p2 <- ggplot(data = diamonds_mp_by_color, aes(x = color, y = mean_price)) +
geom_bar(stat = "identity")
p3 <- ggplot(data = diamonds_mp_by_cut, aes(x = cut, y = mean_price)) +
geom_bar(stat = "identity")
grid.arrange(p1, p2, p3)
